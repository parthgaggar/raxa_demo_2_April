/*
 * File: app/controller/mainTool.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('raxa.controller.mainTool', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            filterButton: '#filter1',
            search: '#mainSearch'
        },

        control: {
            "filterBut": {
                tap: 'showFilter'
            },
            "search": {
                clearicontap: 'onSearchClearIconTap',
                keyup: 'onSearchKeyUp'
            }
        }
    },

    showFilter: function() {
        Ext.getCmp('filterbar').setHidden(false);
        	if(Ext.getCmp('listDocs').getStore().isFiltered())
        	{Ext.getCmp('clearFilter').setHidden(false);
        	  Ext.getCmp('clearFilter').setUi('action');
        	}
    },

    onSearchClearIconTap: function() {
        Ext.getCmp('listDocs').getStore().clearFilter();
    },

    onSearchKeyUp: function(field) {
             var value = field.getValue();

                    var store = Ext.getCmp('listDocs').getStore();

                   store.clearFilter( );

                if (value) {
                    var searches = value.split(','),
                        regexps = [],
                        i, regex;

                    for (i = 0; i < searches.length; i++) {
                        if (!searches[i]) continue;

                        regex = searches[i].trim();
                        regex = regex.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");

                        regexps.push(new RegExp(regex.trim(), 'i'));
                    }

                    store.filter(function(record) {
                        var matched = [];

                        for (i = 0; i < regexps.length; i++) {
                            var search = regexps[i],
                                didMatch = search.test(record.get('hospital') /*+ ' ' + record.get('lastName') */);

                            matched.push(didMatch);
                        }

                        return (regexps.length && matched.indexOf(true) !== -1);
                    });
                }
    }

});