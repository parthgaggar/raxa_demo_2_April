/*
 * File: app/controller/sortList.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('raxa.controller.sortList', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            sortHospital: '#sortHospital',
            sortSpecialization: '#sortSpecialization',
            sortState: '#sortState',
            sortCity: '#sortCity'
        },

        control: {
            "sortHospital": {
                check: 'sortHospital'
            },
            "sortSpecialization": {
                check: 'sortSpecialization'
            },
            "sortState": {
                check: 'sortState'
            },
            "sortCity": {
                check: 'sortCity'
            }
        }
    },

    sortHospital: function() {
        this.group('hospital');
    },

    sortSpecialization: function() {
        this.group('specialization');
    },

    sortState: function() {
        this.group('state');
    },

    sortCity: function(target) {
        this.group('city');
    },

    group: function(name) {
        store = Ext.getCmp('listDocs').getStore();
              if(name=='hospital')
              {store.setGrouper( function (item) {
                     return item.get('hospital')[0];
                        } );
              }
              else if(name=='specialization')
              {store.setGrouper( function (item) {
                     return item.get('Specialization')[0];
                        } );
              }
              else if(name=='state')
              {store.setGrouper( function (item) {
                     return item.get('State');
                        } );
              }
              else if(name=='city')
              {store.setGrouper( function (item) {
                     return (item.get('State')+' '+item.get('City'));
                        } );
              }
    }

});